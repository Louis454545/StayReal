name: 'build'

on:
  push:
    branches:
      - '*'

jobs:
  build-desktop:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Install dependencies
        run: pnpm install

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: StayReal-${{ matrix.platform }}
          path: |
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/appimage/*.AppImage
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/*.exe
          if-no-files-found: ignore

  build-mobile:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            target: 'android'
          - platform: 'macos-latest'
            target: 'ios'
        
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
        
      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Install Android SDK and NDK
        run: |
          echo "y" | sdkmanager --install "platform-tools" "platforms;android-30" "ndk;21.3.6528147"
          echo "NDK_HOME=$(dirname $(dirname $(which ndk-build)))" >> $GITHUB_ENV

      - name: Install dependencies
        run: pnpm install
        
      - name: Build Mobile App
        run: |
          if [ "${{ matrix.target }}" == "android" ]; then
            pnpm tauri android build
          else
            pnpm tauri ios build
          fi
        
      - name: Upload Android artifacts
        if: matrix.target == 'android'
        uses: actions/upload-artifact@v3
        with:
          name: StayReal-Android
          path: target/android/release/apk/*.apk
          if-no-files-found: ignore
        
      - name: Upload iOS artifacts
        if: matrix.target == 'ios'
        uses: actions/upload-artifact@v3
        with:
          name: StayReal-iOS
          path: target/ios/release/*.ipa
          if-no-files-found: ignore